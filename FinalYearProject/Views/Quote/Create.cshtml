@model FinalYearProject.ViewModels.QuoteCreate

@{
    ViewBag.Title = "Create";
}

@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Quote</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.TextBoxFor(model => model.RMAID, new { Type = "Hidden" })

        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.Customer)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.CustomerAddress)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.ContactNumber)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.Email)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FailureInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.FailureInformation)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectiveAction, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DisplayFor(model => model.CorrectiveAction)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LabourCostPerHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LabourCostPerHour, new { id= "LabourCostPerHour", onkeyup = "calculateAllCosts()", htmlAttributes = new { @class = "form -control"} })
                @Html.ValidationMessageFor(model => model.LabourCostPerHour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeTaken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TimeTaken, new { id="TimeTaken", onkeyup = "calculateAllCosts()", htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LabourCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LabourCost, new { id="LabourCost", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LabourCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartsQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PartsQuantity, new { id= "PartsQuantity", onkeyup = "calculateAllCosts()", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartsQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartsCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PartsCost, new { id= "PartsCost", onkeyup = "calculateAllCosts()", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartsCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalPartsCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPartsCost, new { id = "TotalPartsCost", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalPartsCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">

    function calculateAllCosts()
    {
        calculateLabourCost();
        calculatePartCost();
        calculateTotalCost();
    }

    function calculateLabourCost()
    {
        var labourCostPerHour = document.getElementById('LabourCostPerHour').value;
        var hours = document.getElementById('TimeTaken').value;
        var total = parseFloat(labourCostPerHour) * parseFloat(hours);

        document.getElementById('LabourCost').value = total;
    }


    function calculatePartCost()
    {
        var qty = document.getElementById('PartsQuantity').value;
        var cost = document.getElementById('PartsCost').value;
        var total = parseInt(qty) * parseFloat(cost);

        document.getElementById('TotalPartsCost').value = total;
    }


    function calculateTotalCost() {
        var labourCost = document.getElementById('LabourCost').value;
        var partCost = document.getElementById('TotalPartsCost').value;
        var total = parseFloat(labourCost) + parseFloat(partCost);

        document.getElementById('TotalCost').value = total;
    }

</script>